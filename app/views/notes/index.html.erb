<p id="notice"><%= notice %></p>
<h1>List Notes</h1>
<div id="user-id" data-id="<%= @current_user.id %>"></div>
<div id="new-note">
    <%= link_to 'New Note', new_user_note_path(@current_user), remote: :true%>
</div>
<hr />
    <% if !@notes.nil?%>
        <% if @notes.where(pin: "on").present? %>
            <strong>Được Ghim:</strong>
            <% @notes.where(pin: "on").order('updated_at desc').each do |note| %>
                <%= render 'note', note: note %>
            <% end %>
            <hr />
            <strong>Khác:</strong>
            <div class="list-notes" style="height: 480px; overflow: scroll;">
                <% @notes.where(pin: "off").order('created_at desc').each do |note| %>
                    <%= render 'note', note: note %>
                <% end %>
            </div>
        <% else %>
            <div class="list-notes" style="height: 480px; overflow: scroll;">
                <% @notes.each do |note| %>
                    <%= render 'note', note: note %>
                <% end %>
            </div>
        <% end %>
    <% end %>
    
<br>
<script>
    $(".list-notes").sortable({
            // scroll: true,
            // axis: "y",
            containment: ".list-notes",
            // revert: false,
            // helper: "orginal",
            disabled: false,
            start: function(event, ui) { 
                window.position = $(ui.item).position().top;
            },
            stop: function(event, ui) { 
                var userId = $('#user-id').data('id');
                var positionNew = $(ui.item).position().top;
                var noteId = $(ui.item).data("id")
                var nextNoteId = $(ui.item[0].nextElementSibling).data("id")
                $.get(`/users/${userId}/notes/set_index`, { position: window.position, newposition: positionNew, note_id: noteId, nextnote_id: nextNoteId }, function(data) {
                    location.reload();
                } );
                console.log(window.position, positionNew, noteId, nextNoteId);
            }
        });
     $('body').on('change', '.color-select', function(event) {
        var newColor = $(event.target).val();
        var noteId = $(event.target).attr('id').split('-')[1];
        var userId = $('#user-id').data('id');
        $.get(`/users/${userId}/notes/${noteId}/color`, { color: newColor }, function(data) {
                location.reload();
        } );
    });
    // $(document).ready(function () {
    //     $("input[name='note[title]']").focus(function () {
    //         var that = this;
    //         setTimeout(function(){ that.selectionStart = that.selectionEnd = 10000; }, 0);
    //     });
    // }
    $(document).on('focusout', "input[name='note[title]']",  function(e){
        form = document.querySelector('.edit_note');
        form.dispatchEvent(new Event('submit', {bubbles: true}));
    });
    $(document).on('focusout', "textarea[name='content']",  function(e){
        form = document.querySelector('.edit_line_item');
        form.dispatchEvent(new Event('submit', {bubbles: true}));
    });
    reminder();
    function reminder() {
        var userId = $('#user-id').data('id');
        $.get(`/users/${userId}/notes/reminder_notes`, function(data) {
            console.log(data);
            if (data != "") {
                alert("You are having a reminder!")
            }
            setTimeout(reminder, 60 * 1000);
        } );
    }
</script>
